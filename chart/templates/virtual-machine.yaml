{{- range untilStep 0 (int .Values.windows.replicas) 1 }}
apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachineInstanceReplicaSet
metadata:
  name: {{ template "sonja.fullname" $ }}-windows-docker-{{ . }}
  labels:
    app: {{ template "sonja.fullname" $ }}-windows-docker-{{ . }}
    kubevirt.io/os: win2k19
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "sonja.fullname" $ }}-windows-docker-{{ . }}
  template:
    metadata:
      generation: 1
      labels:
        kubevirt.io/os: windows
        app: {{ template "sonja.fullname" $ }}-windows-docker-{{ . }}
    spec:
      terminationGracePeriodSeconds: 30
      domain:
        cpu:
          cores: 2
        resources:
          requests:
            memory: 4096M
        machine:
          type: q35
        devices:
          disks:
          - name: windows-server
            disk:
              bus: virtio
          - name: cloudinitdisk
            cdrom:
              bus: sata
      volumes:
# https://kubevirt.io/user-guide/#/installation/image-upload
# export VERSION=$(curl -s https://github.com/kubevirt/containerized-data-importer/releases/latest | grep -o "v[0-9]\.[0-9]*\.[0-9]*")
# minikube kubectl -- create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-operator.yaml
# minikube kubectl -- create -f https://github.com/kubevirt/containerized-data-importer/releases/download/$VERSION/cdi-cr.yaml
#
# https://kubevirt.io/2020/KubeVirt-VM-Image-Usage-Patterns.html
# minikube kubectl -- port-forward -n cdi service/cdi-uploadproxy 18443:443
# virtctl image-upload dv windows-server-1909 --size=90Gi --image-path WindowsServer1909Docker --uploadproxy-url=https://127.0.0.1:18443 --insecure
#
# https://kubevirt.io/user-guide/#/creation/disks-and-volumes?id=ephemeral
      - name: windows-server
        containerDisk:
          image: {{ $.Values.windows.image }}
      - name: cloudinitdisk
        cloudInitConfigDrive:
          userData: |
            #cloud-config
            write_files:
            - encoding: b64
              content: {{ template "sonja.daemonJsonB64" $ }}
              path: C:\ProgramData\Docker\config\daemon.json
              permissions: '0644'
            runcmd:
            - 'powershell "Restart-Service docker"'
---
{{- end }}
