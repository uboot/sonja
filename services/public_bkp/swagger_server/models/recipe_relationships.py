# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.recipe_relationships_revisions import RecipeRelationshipsRevisions  # noqa: F401,E501
from swagger_server.models.repo_relationships_ecosystem import RepoRelationshipsEcosystem  # noqa: F401,E501
from swagger_server import util


class RecipeRelationships(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, ecosystem: RepoRelationshipsEcosystem=None, revisions: RecipeRelationshipsRevisions=None):  # noqa: E501
        """RecipeRelationships - a model defined in Swagger

        :param ecosystem: The ecosystem of this RecipeRelationships.  # noqa: E501
        :type ecosystem: RepoRelationshipsEcosystem
        :param revisions: The revisions of this RecipeRelationships.  # noqa: E501
        :type revisions: RecipeRelationshipsRevisions
        """
        self.swagger_types = {
            'ecosystem': RepoRelationshipsEcosystem,
            'revisions': RecipeRelationshipsRevisions
        }

        self.attribute_map = {
            'ecosystem': 'ecosystem',
            'revisions': 'revisions'
        }
        self._ecosystem = ecosystem
        self._revisions = revisions

    @classmethod
    def from_dict(cls, dikt) -> 'RecipeRelationships':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Recipe_relationships of this RecipeRelationships.  # noqa: E501
        :rtype: RecipeRelationships
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ecosystem(self) -> RepoRelationshipsEcosystem:
        """Gets the ecosystem of this RecipeRelationships.


        :return: The ecosystem of this RecipeRelationships.
        :rtype: RepoRelationshipsEcosystem
        """
        return self._ecosystem

    @ecosystem.setter
    def ecosystem(self, ecosystem: RepoRelationshipsEcosystem):
        """Sets the ecosystem of this RecipeRelationships.


        :param ecosystem: The ecosystem of this RecipeRelationships.
        :type ecosystem: RepoRelationshipsEcosystem
        """

        self._ecosystem = ecosystem

    @property
    def revisions(self) -> RecipeRelationshipsRevisions:
        """Gets the revisions of this RecipeRelationships.


        :return: The revisions of this RecipeRelationships.
        :rtype: RecipeRelationshipsRevisions
        """
        return self._revisions

    @revisions.setter
    def revisions(self, revisions: RecipeRelationshipsRevisions):
        """Sets the revisions of this RecipeRelationships.


        :param revisions: The revisions of this RecipeRelationships.
        :type revisions: RecipeRelationshipsRevisions
        """

        self._revisions = revisions
