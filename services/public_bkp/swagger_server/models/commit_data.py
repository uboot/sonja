# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.commit import Commit  # noqa: F401,E501
from swagger_server import util


class CommitData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data: Commit=None):  # noqa: E501
        """CommitData - a model defined in Swagger

        :param data: The data of this CommitData.  # noqa: E501
        :type data: Commit
        """
        self.swagger_types = {
            'data': Commit
        }

        self.attribute_map = {
            'data': 'data'
        }
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'CommitData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CommitData of this CommitData.  # noqa: E501
        :rtype: CommitData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self) -> Commit:
        """Gets the data of this CommitData.


        :return: The data of this CommitData.
        :rtype: Commit
        """
        return self._data

    @data.setter
    def data(self, data: Commit):
        """Sets the data of this CommitData.


        :param data: The data of this CommitData.
        :type data: Commit
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")  # noqa: E501

        self._data = data
