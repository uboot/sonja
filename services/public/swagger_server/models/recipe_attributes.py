# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RecipeAttributes(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, version: str=None, user: str=None, channel: str=None, revision: str=None):  # noqa: E501
        """RecipeAttributes - a model defined in Swagger

        :param name: The name of this RecipeAttributes.  # noqa: E501
        :type name: str
        :param version: The version of this RecipeAttributes.  # noqa: E501
        :type version: str
        :param user: The user of this RecipeAttributes.  # noqa: E501
        :type user: str
        :param channel: The channel of this RecipeAttributes.  # noqa: E501
        :type channel: str
        :param revision: The revision of this RecipeAttributes.  # noqa: E501
        :type revision: str
        """
        self.swagger_types = {
            'name': str,
            'version': str,
            'user': str,
            'channel': str,
            'revision': str
        }

        self.attribute_map = {
            'name': 'name',
            'version': 'version',
            'user': 'user',
            'channel': 'channel',
            'revision': 'revision'
        }
        self._name = name
        self._version = version
        self._user = user
        self._channel = channel
        self._revision = revision

    @classmethod
    def from_dict(cls, dikt) -> 'RecipeAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Recipe_attributes of this RecipeAttributes.  # noqa: E501
        :rtype: RecipeAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this RecipeAttributes.


        :return: The name of this RecipeAttributes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this RecipeAttributes.


        :param name: The name of this RecipeAttributes.
        :type name: str
        """

        self._name = name

    @property
    def version(self) -> str:
        """Gets the version of this RecipeAttributes.


        :return: The version of this RecipeAttributes.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this RecipeAttributes.


        :param version: The version of this RecipeAttributes.
        :type version: str
        """

        self._version = version

    @property
    def user(self) -> str:
        """Gets the user of this RecipeAttributes.


        :return: The user of this RecipeAttributes.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user: str):
        """Sets the user of this RecipeAttributes.


        :param user: The user of this RecipeAttributes.
        :type user: str
        """

        self._user = user

    @property
    def channel(self) -> str:
        """Gets the channel of this RecipeAttributes.


        :return: The channel of this RecipeAttributes.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel: str):
        """Sets the channel of this RecipeAttributes.


        :param channel: The channel of this RecipeAttributes.
        :type channel: str
        """

        self._channel = channel

    @property
    def revision(self) -> str:
        """Gets the revision of this RecipeAttributes.


        :return: The revision of this RecipeAttributes.
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision: str):
        """Sets the revision of this RecipeAttributes.


        :param revision: The revision of this RecipeAttributes.
        :type revision: str
        """

        self._revision = revision
