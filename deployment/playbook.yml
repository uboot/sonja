# ansible-galaxy collection install community.docker
# ansible-playbook -u azureuser -i <ip>, deployment/playbook.yml
- hosts: all
  vars:
      kubevirt_version: v0.38.1
  tasks:
  - name: Add packer repository signing key
    apt_key:
      url: https://apt.releases.hashicorp.com/gpg
    become: yes
  - name: add packer apt repository
    apt_repository: 
      repo: 'deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_lsb.codename }} main' 
    become: yes
  - name: Add azure repository signing key
    apt_key:
      url: https://packages.microsoft.com/keys/microsoft.asc
    become: yes
  - name: add azure apt repository
    apt_repository: 
      repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_lsb.codename }} main' 
    become: yes
  - name: Install packages
    apt:
      pkg:
      - azure-cli
      - docker.io
      - git
      - packer
      - python-docker
      - qemu-system-x86
    become: yes
  - name: Add "{{ ansible_user }}" to groups
    user:
      name: "{{ ansible_user }}"
      groups: docker,kvm
      append: yes
    become: yes
    notify:
    - Reset connection
  - name: Re-login before continuing
    meta: flush_handlers
  - name: Install k3s
    shell: |
      curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=644 sh -
    args:
      warn: false
      creates: /etc/rancher/k3s/k3s.yaml
    become: yes
  - name: Get cluster credentials
    fetch:
      src: /etc/rancher/k3s/k3s.yaml
      dest: ./
      flat: yes
  - name: Install kubevirt
    shell: |
      kubectl create namespace kubevirt
      kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/{{ kubevirt_version }}/kubevirt-operator.yaml
      kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/{{ kubevirt_version }}/kubevirt-cr.yaml
  - name: Clone packer repo
    git:
      repo: 'https://github.com/uboot/packer-windows'
      dest: /home/{{ ansible_user }}/packer-windows
      version: win-qemu
  - name: Copy installation ISOs
    copy:
      src: iso/
      dest: /home/{{ ansible_user }}/packer-windows/iso/
  - name: Build Windows qcow2 image
    command: packer build --only=qemu --except=vagrant --var headless=true --var virtio_win_iso=./iso/virtio-win-0.1.208.iso --var iso_url=./iso/en-us_windows_server_version_20h2_updated_nov_2021_x64_dvd_47e439e3.iso --var iso_checksum=329F052AF3F3DA1AB75F0C07BD67BC248BC7D72BA34AA8031EDE806F6B5CF623 windows_server_20h2_docker.json
    args:
      chdir: /home/{{ ansible_user }}/packer-windows
      creates: /home/{{ ansible_user }}/packer-windows/windows_server_20h2_docker
  - name: Run local docker repository
    community.docker.docker_container:
      name: registry
      image: registry:2
      ports:
      - 5000:5000
      restart_policy: always
      container_default_behavior: no_defaults
  - name: Build docker image and push it to local repo
    community.docker.docker_image:
      build:
        path: /home/{{ ansible_user }}/packer-windows/windows_server_20h2_docker
        dockerfile: /home/{{ ansible_user }}/packer-windows/Dockerfile.windows_20h2_docker
      name: localhost:5000/windows20h2
      tag: latest
      push: yes
      source: build
  handlers:
  - name: Reset connection
    meta: reset_connection
